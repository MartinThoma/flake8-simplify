[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61.2",
]

[project]
name = "flake8_simplify"
version = "0.21.0"
description = "flake8 plugin which checks for code that can be simplified"
keywords = [
  "flake8",
]
license = {text = "MIT"}
maintainers = [{name = "Martin Thoma", email = "info@martin-thoma.de"}]
authors = [{name = "Martin Thoma", email = "info@martin-thoma.de"}]
requires-python = ">=3.6.1"
dependencies = [
  "astor>=0.1",
  "flake8>=3.7",
  'importlib-metadata>=0.9; python_version < "3.8"',
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Framework :: Flake8",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.entry-points]
"flake8.extension" = {SIM = "flake8_simplify:Plugin"}

[project.urls]
Homepage = "https://github.com/MartinThoma/flake8-simplify"

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = false

[tool.setuptools.packages.find]
exclude = ["tests"]
namespaces = false

[tool.black]
line-length = 79
target-version = ['py38']

[tool.mutmut]
backup = "False"
runner = "./mutmut-test.sh"
tests_dir = "tests/"
paths_to_mutate = "flake8_simplify.py"

[tool.mypy]
exclude = "build/lib/flake8_simplify.py"
ignore_missing_imports = true
strict = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_unused_ignores = false
show_error_codes = true

[[tool.mypy.overrides]]
disallow_untyped_defs = false
module = [
    "testing.*",
    "tests.*",
]

[tool.pytest.ini_options]
addopts = "--doctest-modules --cov=. --cov-report html:tests/reports/coverage-html --cov-report term-missing --ignore=docs/ --durations=3 --timeout=30"
doctest_encoding = "utf-8"
